# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2

references:

  common_env_vars: &common_env_vars
    environment:
      - MYSQL_ROOT_HOST: "%"
      - MYSQL_ROOT_PASSWORD: password

  common: &common
    working_directory: ~/repo
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "composer.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install Dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y libzip-dev
            sudo apt-get install -y zlib1g-dev libicu-dev g++
            sudo apt-get install mysql-client
            sudo apt-get -y install mysql-server

      - run:
          name: Install & Configure PHP extensions
          command: |
            sudo -E docker-php-ext-install zip
            sudo -E docker-php-ext-configure intl
            sudo -E docker-php-ext-install intl
            sudo -E docker-php-ext-install mysqli

      - run:
          name: Fix MySQL socket config
          command: |
            sudo sh -c "echo 'pdo_mysql.default_socket=/var/run/mysqld/mysqld.sock' > /usr/local/etc/php/conf.d/pdo.ini"

      - run:
          name: Start database server
          command: |
            sudo service mysql start
            sleep 2
            ps aux | grep mysql

      - run:
          name: Setup MySQL User
          command: |
            sudo mysql -e "UPDATE mysql.user SET plugin = '', Password = PASSWORD('$MYSQL_ROOT_PASSWORD') WHERE User = 'root';"
            sudo mysql -e "FLUSH PRIVILEGES;"

      - run:
          name: Install Subversion
          command: sudo apt-get install subversion

      - run:
          name: Install Composer Dependencies
          command: composer install -n --prefer-dist

      - run:
          name: Install Test Reporter
          command: |
            if [ "test-php-73" == "${CIRCLE_JOB}" ]; then
              curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
              chmod +x ./cc-test-reporter
              sudo -E docker-php-ext-enable xdebug
            fi

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}

      # Check CS
      - run:
          name: Check Coding Standards
          # command: composer run-script check-cs-errors
          command: composer run-script phpcs

      - run:
          name: Install PHP Unit Tests
          command: composer run-script tests-install

      - run:
          name: Run PHP Unit Tests
          command: |
            if [ "test-php-73" == "${CIRCLE_JOB}" ]; then
                ./cc-test-reporter before-build
                export COMPOSER_PROCESS_TIMEOUT=1200
                composer run-script tests-run -- --coverage-clover clover.xml
                ./cc-test-reporter after-build --coverage-input-type clover --exit-code $?
            else
              composer run-script tests-run
            fi


jobs:
  test-php-71:
    docker:
      - image: circleci/php:7.1-browsers
        <<: [ *common_env_vars ]
    <<: [ *common ]

  test-php-72:
    docker:
      - image: circleci/php:7.2-browsers
        <<: [ *common_env_vars ]
    <<: [ *common ]

  test-php-73:
    docker:
      - image: circleci/php:7.3-browsers
        <<: [ *common_env_vars ]
    <<: [ *common ]

workflows:
  version: 2
  test:
    jobs:
      - test-php-71
      - test-php-72
      - test-php-73
