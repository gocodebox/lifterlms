!function(i){window.llms=window.llms||{},window.llms.checkout=new function(){var m=[],s=[];return this.$checkout_form=i("#llms-product-purchase-form"),this.$confirm_form=i("#llms-product-purchase-confirm-form"),this.$form_sections=!1,this.form_action=!1,this.init=function(){var e=this;i(".llms-checkout-wrapper").length&&this.bind_login(),this.$checkout_form.length?(this.form_action="checkout",this.$form_sections=this.$checkout_form.find(".llms-checkout-section"),this.$checkout_form.on("submit",this,this.submit),i(".llms-password-strength-meter").length&&this.add_before_submit_event({data:LLMS.PasswordStrength,handler:LLMS.PasswordStrength.checkout}),this.bind_coupon(),this.bind_gateways()):this.$confirm_form.length&&(this.form_action="confirm",this.$form_sections=this.$confirm_form.find(".llms-checkout-section"),this.$confirm_form.on("submit",function(){e.processing("start")}))},this.add_before_submit_event=function(e){e.handler&&"function"==typeof e.handler&&(e.data||(e.data=null),m.push(e))},this.add_error=function(e,t){var s="llms-checkout-errors";$err=i("#"+s),$err.length||($err=i('<ul class="llms-notice llms-error" id="'+s+'" />'),i(".llms-checkout-wrapper").prepend($err)),$err.append("<li>"+e+"</li>"),t&&console.error(t)},this.add_gateway=function(e){s.push(e)},this.bind_coupon=function(){var t=this;i('a[href="#llms-coupon-toggle"]').on("click",function(e){e.preventDefault(),i(".llms-coupon-entry").slideToggle(400)}),i("#llms-apply-coupon").on("click",function(e){e.preventDefault(),t.coupon_apply(i(this))}),i("#llms-remove-coupon").on("click",function(e){e.preventDefault(),t.coupon_remove(i(this))})},this.bind_gateways=function(){this.load_gateways(),i('input[name="llms_payment_gateway"]').length||i("#llms_create_pending_order").removeAttr("disabled"),i('input[name="llms_payment_gateway"]').on("change",function(){i('input[name="llms_payment_gateway"]').each(function(){var e=i(this),t=e.closest(".llms-payment-gateway"),s=t.find(".llms-gateway-fields").find("input, textarea, select"),o=e.is(":checked");t[o?"addClass":"removeClass"]("is-selected"),o?(s.removeAttr("disabled"),i(".llms-payment-gateways").trigger("llms-gateway-selected",{id:e.val(),$selector:t})):s.attr("disabled","disabled")})}),i(".llms-payment-gateways").on("llms-gateway-selected",function(e,t){var s=i("#llms_create_pending_order");t.$selector&&t.$selector.find(".llms-gateway-fields .invalid").length?s.attr("disabled","disabled"):s.removeAttr("disabled")})},this.bind_login=function(){i('a[href="#llms-show-login"]').on("click",function(e){e.preventDefault(),i(this).closest(".llms-info,.llms-notice").slideUp(400),i("form.llms-login").slideDown(400)})},this.clear_errors=function(){i("#llms-checkout-errors").remove()},this.coupon_apply=function(e){var s=this,t=i("#llms_coupon_code").val(),o=i(".llms-coupon-messages"),n=o.find(".llms-error"),l=i("form.llms-checkout");LLMS.Spinner.start(l),window.LLMS.Ajax.call({data:{action:"validate_coupon_code",code:t,plan_id:i("#llms-plan-id").val()},beforeSend:function(){n.hide()},success:function(e){if(LLMS.Spinner.stop(l),"error"===e.code){var t=i("<li>"+e.message+"</li>");n.length?n.empty():(n=i('<ul class="llms-notice llms-error" />'),o.append(n)),t.appendTo(n),n.show()}else e.success&&(i(".llms-coupon-wrapper").replaceWith(e.data.coupon_html),s.bind_coupon(),i(".llms-payment-gateways").replaceWith(e.data.gateways_html),s.bind_gateways(),i(".llms-order-summary").replaceWith(e.data.summary_html))}})},this.coupon_remove=function(e){var t=this,s=i("form.llms-checkout");LLMS.Spinner.start(s),window.LLMS.Ajax.call({data:{action:"remove_coupon_code",plan_id:i("#llms-plan-id").val()},success:function(e){LLMS.Spinner.stop(s),e.success&&(i(".llms-coupon-wrapper").replaceWith(e.data.coupon_html),t.bind_coupon(),i(".llms-order-summary").replaceWith(e.data.summary_html),i(".llms-payment-gateways").replaceWith(e.data.gateways_html),t.bind_gateways())}})},this.focus_errors=function(){i("html, body").animate({scrollTop:i("#llms-checkout-errors").offset().top-50},200)},this.load_gateways=function(){for(var e=0;e<=s.length;e++){var t=s[e];"object"==typeof t&&null!==t&&void 0!==t.bind&&"function"==typeof t.bind&&t.bind()}},this.processing=function(e){var t,s;switch(e){case"stop":t="removeClass";break;case"start":default:t="addClass"}"checkout"===this.form_action?s=this.$checkout_form:"confirm"===this.form_action&&(s=this.$confirm_form),s[t]("llms-is-processing"),LLMS.Spinner[e](this.$form_sections)},this.submit=function(e){var o,n=e.data,l=m.length,i=0,r=[],a=0,c=0;e.preventDefault(),n.processing("start"),n.clear_errors();for(var t=0;t<m.length;t++){var s=m[t];s.handler(s.data,function(e){a++,!0===e?c++:"string"==typeof e&&r.push(e)})}o=setInterval(function(){var e=!1,t=!1;if(6e4<=i)t=e=!0;else if(l===a)if(l===c)e=!0,n.$checkout_form.off("submit",n.submit),n.$checkout_form.trigger("submit");else if(r.length){t=e=!0;for(var s=0;s<r.length;s++)n.add_error(r[s]);n.focus_errors()}e&&clearInterval(o),t&&n.processing("stop"),i++},100)},this.init(),this}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxsbXMtZm9ybS1jaGVja291dC5qcyJdLCJuYW1lcyI6WyIkIiwid2luZG93IiwibGxtcyIsImNoZWNrb3V0IiwiYmVmb3JlX3N1Ym1pdCIsImdhdGV3YXlzIiwidGhpcyIsIiRjaGVja291dF9mb3JtIiwiJGNvbmZpcm1fZm9ybSIsIiRmb3JtX3NlY3Rpb25zIiwiZm9ybV9hY3Rpb24iLCJpbml0Iiwic2VsZiIsImxlbmd0aCIsImJpbmRfbG9naW4iLCJmaW5kIiwib24iLCJzdWJtaXQiLCJhZGRfYmVmb3JlX3N1Ym1pdF9ldmVudCIsImRhdGEiLCJMTE1TIiwiUGFzc3dvcmRTdHJlbmd0aCIsImhhbmRsZXIiLCJiaW5kX2NvdXBvbiIsImJpbmRfZ2F0ZXdheXMiLCJwcm9jZXNzaW5nIiwib2JqIiwicHVzaCIsImFkZF9lcnJvciIsIm1lc3NhZ2UiLCJpZCIsIiRlcnIiLCJwcmVwZW5kIiwiYXBwZW5kIiwiY29uc29sZSIsImVycm9yIiwiYWRkX2dhdGV3YXkiLCJnYXRld2F5X2NsYXNzIiwiZSIsInByZXZlbnREZWZhdWx0Iiwic2xpZGVUb2dnbGUiLCJjb3Vwb25fYXBwbHkiLCJjb3Vwb25fcmVtb3ZlIiwibG9hZF9nYXRld2F5cyIsInJlbW92ZUF0dHIiLCJlYWNoIiwiJGVsIiwiJHBhcmVudCIsImNsb3Nlc3QiLCIkZmllbGRzIiwiY2hlY2tlZCIsImlzIiwidHJpZ2dlciIsInZhbCIsIiRzZWxlY3RvciIsImF0dHIiLCIkc3VibWl0Iiwic2xpZGVVcCIsInNsaWRlRG93biIsImNsZWFyX2Vycm9ycyIsInJlbW92ZSIsIiRidG4iLCJjb2RlIiwiJG1lc3NhZ2VzIiwiJGVycm9ycyIsIiRjb250YWluZXIiLCJTcGlubmVyIiwic3RhcnQiLCJBamF4IiwiY2FsbCIsImFjdGlvbiIsInBsYW5faWQiLCJiZWZvcmVTZW5kIiwiaGlkZSIsInN1Y2Nlc3MiLCJyIiwic3RvcCIsIiRtZXNzYWdlIiwiZW1wdHkiLCJhcHBlbmRUbyIsInNob3ciLCJyZXBsYWNlV2l0aCIsImNvdXBvbl9odG1sIiwiZ2F0ZXdheXNfaHRtbCIsInN1bW1hcnlfaHRtbCIsImZvY3VzX2Vycm9ycyIsImFuaW1hdGUiLCJzY3JvbGxUb3AiLCJvZmZzZXQiLCJ0b3AiLCJpIiwiZyIsInVuZGVmaW5lZCIsImJpbmQiLCJmdW5jIiwiJGZvcm0iLCJpbnRlcnZhbCIsIm51bSIsImNoZWNrcyIsImVycm9ycyIsImZpbmlzaGVzIiwic3VjY2Vzc2VzIiwic2V0SW50ZXJ2YWwiLCJjbGVhciIsIm9mZiIsImNsZWFySW50ZXJ2YWwiLCJqUXVlcnkiXSwibWFwcGluZ3MiOiJDQVNBLFNBQVlBLEdBb2pCWEMsT0FBT0MsS0FBZ0JELE9BQU9DLE1BQVEsR0FDdENELE9BQU9DLEtBQUtDLFNBQVcsSUFuakJILFdBU25CLElBQUlDLEVBQWdCLEdBU2hCQyxFQUFXLEdBNGhCZixPQTFoQkFDLEtBQUtDLGVBQWlCUCxFQUFHLCtCQUN6Qk0sS0FBS0UsY0FBaUJSLEVBQUcsdUNBQ3pCTSxLQUFLRyxnQkFBaUIsRUFDdEJILEtBQUtJLGFBQWlCLEVBV3RCSixLQUFLSyxLQUFPLFdBRVgsSUFBSUMsRUFBT04sS0FFTk4sRUFBRywwQkFBMkJhLFFBQ2xDUCxLQUFLUSxhQUdEUixLQUFLQyxlQUFlTSxRQUV4QlAsS0FBS0ksWUFBaUIsV0FDdEJKLEtBQUtHLGVBQWlCSCxLQUFLQyxlQUFlUSxLQUFNLDBCQUVoRFQsS0FBS0MsZUFBZVMsR0FBSSxTQUFVVixLQUFNQSxLQUFLVyxRQUd4Q2pCLEVBQUcsaUNBQWtDYSxRQUN6Q1AsS0FBS1ksd0JBQXlCLENBQzdCQyxLQUFNQyxLQUFLQyxpQkFDWEMsUUFBU0YsS0FBS0MsaUJBQWlCbEIsV0FJakNHLEtBQUtpQixjQUVMakIsS0FBS2tCLGlCQUVNbEIsS0FBS0UsY0FBY0ssU0FFOUJQLEtBQUtJLFlBQWlCLFVBQ3RCSixLQUFLRyxlQUFpQkgsS0FBS0UsY0FBY08sS0FBTSwwQkFFL0NULEtBQUtFLGNBQWNRLEdBQUksU0FBVSxXQUNoQ0osRUFBS2EsV0FBWSxhQWlC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LEVBQVFULElBR3pCOUUsRUFBS3lFLGVBTUZrQixHQUNKRSxjQUFlVCxHQUdYcEIsR0FDSmhFLEVBQUthLFdBQVksUUFHbEJ5RSxLQUVFLE1BS0o1RixLQUFLSyxPQUVFTCxNQWhqQlQsQ0F1akJLb0ciLCJmaWxlIjoibGxtcy1mb3JtLWNoZWNrb3V0Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGlmdGVyTE1TIENoZWNrb3V0IFNjcmVlbiByZWxhdGVkIGV2ZW50cyBhbmQgaW50ZXJhY3Rpb25zXG4gKlxuICogQHBhY2thZ2UgTGlmdGVyTE1TL1NjcmlwdHNcbiAqXG4gKiBAc2luY2UgICAzLjAuMFxuICogQHZlcnNpb24gMy4zNC41XG4gKi9cblxuKCBmdW5jdGlvbiggJCApIHtcblxuXHR2YXIgbGxtc19jaGVja291dCA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0LyoqXG5cdFx0ICogQXJyYXkgb2YgdmFsaWRhdGlvbiBmdW5jdGlvbnMgdG8gY2FsbCBvbiBmb3JtIHN1Ym1pc3Npb25cblx0XHQgKlxuXHRcdCAqIEB0eXBlICAgIGFycmF5XG5cdFx0ICogQHNpbmNlICAgMy4wLjBcblx0XHQgKiBAdmVyc2lvbiAzLjAuMFxuXHRcdCAqL1xuXHRcdHZhciBiZWZvcmVfc3VibWl0ID0gW107XG5cblx0XHQvKipcblx0XHQgKiBBcnJheSBvZiBnYXRld2F5cyB0byBiZSBhdXRvbWF0aWNhbGx5IGJvdW5kIHdoZW4gbmVlZGVkXG5cdFx0ICpcblx0XHQgKiBAdHlwZSAgICBhcnJheVxuXHRcdCAqIEBzaW5jZSAgIDMuMC4wXG5cdFx0ICogQHZlcnNpb24gMy4wLjBcblx0XHQgKi9cblx0XHR2YXIgZ2F0ZXdheXMgPSBbXTtcblxuXHRcdHRoaXMuJGNoZWNrb3V0X2Zvcm0gPSAkKCAnI2xsbXMtcHJvZHVjdC1wdXJjaGFzZS1mb3JtJyApO1xuXHRcdHRoaXMuJGNvbmZpcm1fZm9ybSAgPSAkKCAnI2xsbXMtcHJvZHVjdC1wdXJjaGFzZS1jb25maXJtLWZvcm0nICk7XG5cdFx0dGhpcy4kZm9ybV9zZWN0aW9ucyA9IGZhbHNlO1xuXHRcdHRoaXMuZm9ybV9hY3Rpb24gICAgPSBmYWxzZTtcblxuXHRcdC8qKlxuXHRcdCAqIEluaXRpYWxpemUgY2hlY2tvdXQgSlMgJiBiaW5kIGlmIG9uIHRoZSBjaGVja291dCBzY3JlZW5cblx0XHQgKlxuXHRcdCAqIEBzaW5jZSAzLjAuMFxuXHRcdCAqIEBzaW5jZSAzLjM0LjUgTWFrZSBzdXJlIHdlIGJpbmQgY2xpY2sgZXZlbnRzIGZvciB0aGUgU2hvdyAvIEhpZGUgbG9naW4gYXJlYSBhdCB0aGUgdG9wIG9mIHRoZSBjaGVja291dCBzY3JlZW5cblx0XHQgKiAgICAgICAgICAgICAgICAgIGV2ZW4gaWYgdGhlcmUncyBubyBsbG1zIHByb2R1Y3QgcHVyY2hhc2UgZm9ybS5cblx0XHQgKlxuXHRcdCAqIEByZXR1cm4gdm9pZFxuXHRcdCAqL1xuXHRcdHRoaXMuaW5pdCA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cblx0XHRcdGlmICggJCggJy5sbG1zLWNoZWNrb3V0LXdyYXBwZXInICkubGVuZ3RoICkge1xuXHRcdFx0XHR0aGlzLmJpbmRfbG9naW4oKTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCB0aGlzLiRjaGVja291dF9mb3JtLmxlbmd0aCApIHtcblxuXHRcdFx0XHR0aGlzLmZvcm1fYWN0aW9uICAgID0gJ2NoZWNrb3V0Jztcblx0XHRcdFx0dGhpcy4kZm9ybV9zZWN0aW9ucyA9IHRoaXMuJGNoZWNrb3V0X2Zvcm0uZmluZCggJy5sbG1zLWNoZWNrb3V0LXNlY3Rpb24nICk7XG5cblx0XHRcdFx0dGhpcy4kY2hlY2tvdXRfZm9ybS5vbiggJ3N1Ym1pdCcsIHRoaXMsIHRoaXMuc3VibWl0ICk7XG5cblx0XHRcdFx0Ly8gYWRkIGJlZm9yZSBzdWJtaXQgZXZlbnQgZm9yIHBhc3N3b3JkIHN0cmVuZ3RoIG1ldGVyIGlmIG9uZSdzIGZvdW5kXG5cdFx0XHRcdGlmICggJCggJy5sbG1zLXBhc3N3b3JkLXN0cmVuZ3RoLW1ldGVyJyApLmxlbmd0aCApIHtcblx0XHRcdFx0XHR0aGlzLmFkZF9iZWZvcmVfc3VibWl0X2V2ZW50KCB7XG5cdFx0XHRcdFx0XHRkYXRhOiBMTE1TLlBhc3N3b3JkU3RyZW5ndGgsXG5cdFx0XHRcdFx0XHRoYW5kbGVyOiBMTE1TLlBhc3N3b3JkU3RyZW5ndGguY2hlY2tvdXQsXG5cdFx0XHRcdFx0fSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0dGhpcy5iaW5kX2NvdXBvbigpO1xuXG5cdFx0XHRcdHRoaXMuYmluZF9nYXRld2F5cygpO1xuXG5cdFx0XHR9IGVsc2UgaWYgKCB0aGlzLiRjb25maXJtX2Zvcm0ubGVuZ3RoICkge1xuXG5cdFx0XHRcdHRoaXMuZm9ybV9hY3Rpb24gICAgPSAnY29uZmlybSc7XG5cdFx0XHRcdHRoaXMuJGZvcm1fc2VjdGlvbnMgPSB0aGlzLiRjb25maXJtX2Zvcm0uZmluZCggJy5sbG1zLWNoZWNrb3V0LXNlY3Rpb24nICk7XG5cblx0XHRcdFx0dGhpcy4kY29uZmlybV9mb3JtLm9uKCAnc3VibWl0JywgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0c2VsZi5wcm9jZXNzaW5nKCAnc3RhcnQnICk7XG5cdFx0XHRcdH0gKTtcblxuXHRcdFx0fVxuXG5cdFx0fTtcblxuXHRcdC8qKlxuXHRcdCAqIFB1YmxpYyBmdW5jdGlvbiB3aGljaCBhbGxvd3Mgb3RoZXIgY2xhc3NlcyBvciBleHRlbnNpb25zIHRvIGFkZFxuXHRcdCAqIGJlZm9yZSBzdWJtaXQgZXZlbnRzIHRvIGxsbXMgY2hlY2tvdXQgcHJpdmF0ZSBcImJlZm9yZV9zdWJtaXRcIiBhcnJheVxuXHRcdCAqXG5cdFx0ICogQHBhcmFtICAgIG9iamVjdCAgb2JqICBvYmplY3Qgb2YgZGF0YSB0byBwdXNoIHRvIHRoZSBhcnJheVxuXHRcdCAqICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZXMgYXQgbGVhc3QgYSBcImhhbmRsZXJcIiBrZXkgd2hpY2ggc2hvdWxkIHBhc3MgYSBjYWxsYWJsZSBmdW5jdGlvblxuXHRcdCAqICAgICAgICAgICAgICAgICAgICAgICAgXCJkYXRhXCIgY2FuIGJlIGFueXRoaW5nLCB3aWxsIGJlIHBhc3NlZCBhcyB0aGUgZmlyc3QgcGFyYW1ldGVyIHRvIHRoZSBoYW5kbGVyIGZ1bmN0aW9uXG5cdFx0ICogQHNpbmNlICAgIDMuMC4wXG5cdFx0ICogQHZlcnNpb24gIDMuMC4wXG5cdFx0ICovXG5cdFx0dGhpcy5hZGRfYmVmb3JlX3N1Ym1pdF9ldmVudCA9IGZ1bmN0aW9uKCBvYmogKSB7XG5cblx0XHRcdGlmICggISBvYmouaGFuZGxlciB8fCAnZnVuY3Rpb24nICE9PSB0eXBlb2Ygb2JqLmhhbmRsZXIgKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCAhIG9iai5kYXRhICkge1xuXHRcdFx0XHRvYmouZGF0YSA9IG51bGw7XG5cdFx0XHR9XG5cblx0XHRcdGJlZm9yZV9zdWJtaXQucHVzaCggb2JqICk7XG5cblx0XHR9O1xuXG5cdFx0LyoqXG5cdFx0ICogQWRkIGFuIGVycm9yIG1lc3NhZ2Vcblx0XHQgKlxuXHRcdCAqIEBwYXJhbSAgICBzdHJpbmcgICAgIG1lc3NhZ2UgIGVycm9yIG1lc3NhZ2Ugc3RyaW5nXG5cdFx0ICogQHBhcmFtICAgIG1peGVkICAgICAgZGF0YSAgICAgb3B0aW9uYWwgZXJyb3IgZGF0YSB0byBvdXRwdXQgb24gdGhlIGNvbnNvbGVcblx0XHQgKiBAcmV0dXJuICAgdm9pZFxuXHRcdCAqIEBzaW5jZSAgICAzLjI3LjBcblx0XHQgKiBAdmVyc2lvbiAgMy4yNy4wXG5cdFx0ICovXG5cdFx0dGhpcy5hZGRfZXJyb3IgPSBmdW5jdGlvbiggbWVzc2FnZSwgZGF0YSApIHtcblxuXHRcdFx0dmFyIGlkICAgPSAnbGxtcy1jaGVja291dC1lcnJvcnMnO1xuXHRcdFx0XHQkZXJyID0gJCggJyMnICsgaWQgKTtcblxuXHRcdFx0aWYgKCAhICRlcnIubGVuZ3RoICkge1xuXHRcdFx0XHQkZXJyID0gJCggJzx1bCBjbGFzcz1cImxsbXMtbm90aWNlIGxsbXMtZXJyb3JcIiBpZD1cIicgKyBpZCArICdcIiAvPicgKTtcblx0XHRcdFx0JCggJy5sbG1zLWNoZWNrb3V0LXdyYXBwZXInICkucHJlcGVuZCggJGVyciApO1xuXHRcdFx0fVxuXG5cdFx0XHQkZXJyLmFwcGVuZCggJzxsaT4nICsgbWVzc2FnZSArICc8L2xpPicgKTtcblxuXHRcdFx0aWYgKCBkYXRhICkge1xuXHRcdFx0XHRjb25zb2xlLmVycm9yKCBkYXRhICk7XG5cdFx0XHR9XG5cblx0XHR9O1xuXG5cdFx0LyoqXG5cdFx0ICogUHVibGljIGZ1bmN0aW9uIHdoaWNoIGFsbG93cyBvdGhlciBjbGFzc2VzIG9yIGV4dGVuc2lvbnMgdG8gYWRkXG5cdFx0ICogZ2F0ZXdheXMgY2xhc3NlcyB0aGF0IHNob3VsZCBiZSBib3VuZCBieSB0aGlzIGNsYXNzXG5cdFx0ICpcblx0XHQgKiBAcGFyYW0gICAgb2JqICAgZ2F0ZXdheV9jbGFzcyAgY2FsbGFibGUgY2xhc3Mgb2JqZWN0XG5cdFx0ICogQHNpbmNlICAgIDMuMC4wXG5cdFx0ICogQHZlcnNpb24gIDMuMC4wXG5cdFx0ICovXG5cdFx0dGhpcy5hZGRfZ2F0ZXdheSA9IGZ1bmN0aW9uKCBnYXRld2F5X2NsYXNzICkge1xuXG5cdFx0XHRnYXRld2F5cy5wdXNoKCBnYXRld2F5X2NsYXNzICk7XG5cblx0XHR9O1xuXG5cdFx0LyoqXG5cdFx0ICogQmluZCBjb3Vwb24gYWRkICYgcmVtb3ZlIGJ1dHRvbiBldmVudHNcblx0XHQgKlxuXHRcdCAqIEByZXR1cm4gICB2b2lkXG5cdFx0ICogQHNpbmNlICAgIDMuMC4wXG5cdFx0ICogQHZlcnNpb24gIDMuMC4wXG5cdFx0ICovXG5cdFx0dGhpcy5iaW5kX2NvdXBvbiA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cblx0XHRcdC8vIHNob3cgJiBoaWRlIHRoZSBjb3Vwb24gZmllbGQgJiBidXR0b25cblx0XHRcdCQoICdhW2hyZWY9XCIjbGxtcy1jb3Vwb24tdG9nZ2xlXCJdJyApLm9uKCAnY2xpY2snLCBmdW5jdGlvbiggZSApIHtcblxuXHRcdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdCQoICcubGxtcy1jb3Vwb24tZW50cnknICkuc2xpZGVUb2dnbGUoIDQwMCApO1xuXG5cdFx0XHR9ICk7XG5cblx0XHRcdC8vIGFwcGx5IGNvdXBvbiBjbGlja1xuXHRcdFx0JCggJyNsbG1zLWFwcGx5LWNvdXBvbicgKS5vbiggJ2NsaWNrJywgZnVuY3Rpb24oIGUgKSB7XG5cblx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHRzZWxmLmNvdXBvbl9hcHBseSggJCggdGhpcyApICk7XG5cblx0XHRcdH0gKTtcblxuXHRcdFx0Ly8gcmVtb3ZlIGNvdXBvbiBjbGlja1xuXHRcdFx0JCggJyNsbG1zLXJlbW92ZS1jb3Vwb24nICkub24oICdjbGljaycsIGZ1bmN0aW9uKCBlICkge1xuXG5cdFx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0c2VsZi5jb3Vwb25fcmVtb3ZlKCAkKCB0aGlzICkgKTtcblxuXHRcdFx0fSApO1xuXG5cdFx0fTtcblxuXHRcdC8qKlxuXHRcdCAqIEJpbmQgZ2F0ZXdheSBzZWN0aW9uIGV2ZW50c1xuXHRcdCAqXG5cdFx0ICogQHJldHVybiAgIHZvaWRcblx0XHQgKiBAc2luY2UgICAgMy4wLjBcblx0XHQgKiBAdmVyc2lvbiAgMy4wLjBcblx0XHQgKi9cblx0XHR0aGlzLmJpbmRfZ2F0ZXdheXMgPSBmdW5jdGlvbigpIHtcblxuXHRcdFx0dGhpcy5sb2FkX2dhdGV3YXlzKCk7XG5cblx0XHRcdGlmICggISAkKCAnaW5wdXRbbmFtZT1cImxsbXNfcGF5bWVudF9nYXRld2F5XCJdJyApLmxlbmd0aCApIHtcblx0XHRcdFx0JCggJyNsbG1zX2NyZWF0ZV9wZW5kaW5nX29yZGVyJyApLnJlbW92ZUF0dHIoICdkaXNhYmxlZCcgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gYWRkIGNsYXNzIGFuZCB0cmlnZ2VyIHdhdGNoYWJsZSBldmVudCB3aGVuIGdhdGV3YXkgc2VsZWN0aW9uIGNoYW5nZXNcblx0XHRcdCQoICdpbnB1dFtuYW1lPVwibGxtc19wYXltZW50X2dhdGV3YXlcIl0nICkub24oICdjaGFuZ2UnLCBmdW5jdGlvbigpIHtcblxuXHRcdFx0XHQkKCAnaW5wdXRbbmFtZT1cImxsbXNfcGF5bWVudF9nYXRld2F5XCJdJyApLmVhY2goIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdFx0dmFyICRlbCAgICAgICAgICA9ICQoIHRoaXMgKSxcblx0XHRcdFx0XHRcdCRwYXJlbnQgICAgICA9ICRlbC5jbG9zZXN0KCAnLmxsbXMtcGF5bWVudC1nYXRld2F5JyApLFxuXHRcdFx0XHRcdFx0JGZpZWxkcyAgICAgID0gJHBhcmVudC5maW5kKCAnLmxsbXMtZ2F0ZXdheS1maWVsZHMnICkuZmluZCggJ2lucHV0LCB0ZXh0YXJlYSwgc2VsZWN0JyApLFxuXHRcdFx0XHRcdFx0Y2hlY2tlZCAgICAgID0gJGVsLmlzKCAnOmNoZWNrZWQnICksXG5cdFx0XHRcdFx0XHRkaXNwbGF5X2Z1bmMgPSAoIGNoZWNrZWQgKSA/ICdhZGRDbGFzcycgOiAncmVtb3ZlQ2xhc3MnO1xuXG5cdFx0XHRcdFx0JHBhcmVudFsgZGlzcGxheV9mdW5jIF0oICdpcy1zZWxlY3RlZCcgKTtcblxuXHRcdFx0XHRcdGlmICggY2hlY2tlZCApIHtcblxuXHRcdFx0XHRcdFx0Ly8gZW5hYmxlIGZpZWxkc1xuXHRcdFx0XHRcdFx0JGZpZWxkcy5yZW1vdmVBdHRyKCAnZGlzYWJsZWQnICk7XG5cblx0XHRcdFx0XHRcdC8vIGVtaXQgYSB3YXRjaGFibGUgZXZlbnQgZm9yIGV4dGVuc2lvbnMgdG8gaG9vayBvbnRvXG5cdFx0XHRcdFx0XHQkKCAnLmxsbXMtcGF5bWVudC1nYXRld2F5cycgKS50cmlnZ2VyKCAnbGxtcy1nYXRld2F5LXNlbGVjdGVkJywge1xuXHRcdFx0XHRcdFx0XHRpZDogJGVsLnZhbCgpLFxuXHRcdFx0XHRcdFx0XHQkc2VsZWN0b3I6ICRwYXJlbnQsXG5cdFx0XHRcdFx0XHR9ICk7XG5cblx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHQvLyBkaXNhYmxlIGZpZWxkc1xuXHRcdFx0XHRcdFx0JGZpZWxkcy5hdHRyKCAnZGlzYWJsZWQnLCAnZGlzYWJsZWQnICk7XG5cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0fSApO1xuXG5cdFx0XHR9ICk7XG5cblx0XHRcdC8vIGVuYWJsZSAvIGRpc2FibGUgYnV0dG9ucyBkZXBlbmRpbmcgb24gZmllbGQgdmFsaWRhdGlvbiBzdGF0dXNcblx0XHRcdCQoICcubGxtcy1wYXltZW50LWdhdGV3YXlzJyApLm9uKCAnbGxtcy1nYXRld2F5LXNlbGVjdGVkJywgZnVuY3Rpb24oIGUsIGRhdGEgKSB7XG5cblx0XHRcdFx0dmFyICRzdWJtaXQgPSAkKCAnI2xsbXNfY3JlYXRlX3BlbmRpbmdfb3JkZXInICk7XG5cblx0XHRcdFx0aWYgKCBkYXRhLiRzZWxlY3RvciAmJiBkYXRhLiRzZWxlY3Rvci5maW5kKCAnLmxsbXMtZ2F0ZXdheS1maWVsZHMgLmludmFsaWQnICkubGVuZ3RoICkge1xuXHRcdFx0XHRcdCRzdWJtaXQuYXR0ciggJ2Rpc2FibGVkJywgJ2Rpc2FibGVkJyApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdCRzdWJtaXQucmVtb3ZlQXR0ciggJ2Rpc2FibGVkJyApO1xuXHRcdFx0XHR9XG5cblx0XHRcdH0gKTtcblxuXHRcdH07XG5cblx0XHQvKipcblx0XHQgKiBCaW5kIGNsaWNrIGV2ZW50cyBmb3IgdGhlIFNob3cgLyBIaWRlIGxvZ2luIGFyZWEgYXQgdGhlIHRvcCBvZiB0aGUgY2hlY2tvdXQgc2NyZWVuXG5cdFx0ICpcblx0XHQgKiBAc2luY2UgMy4wLjBcblx0XHQgKiBAc2luY2UgMy4zNC41IFdoZW4gc2hvd2luZyB0aGUgbG9naW4gZm9ybSBhcmVhIG1ha2Ugc3VyZSB3ZSBzbGlkZSB1cCB0aGUgYC5sbG1zLW5vdGljZWAgbGluaydzIHBhcmVudCB0b28uXG5cdFx0ICpcblx0XHQgKiBAcmV0dXJuIHZvaWRcblx0XHQgKi9cblx0XHR0aGlzLmJpbmRfbG9naW4gPSBmdW5jdGlvbigpIHtcblxuXHRcdFx0JCggJ2FbaHJlZj1cIiNsbG1zLXNob3ctbG9naW5cIl0nICkub24oICdjbGljaycsIGZ1bmN0aW9uKCBlICkge1xuXG5cdFx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0JCggdGhpcyApLmNsb3Nlc3QoICcubGxtcy1pbmZvLC5sbG1zLW5vdGljZScgKS5zbGlkZVVwKCA0MDAgKTtcblx0XHRcdFx0JCggJ2Zvcm0ubGxtcy1sb2dpbicgKS5zbGlkZURvd24oIDQwMCApO1xuXG5cdFx0XHR9ICk7XG5cdFx0fTtcblxuXHRcdC8qKlxuXHRcdCAqIENsZWFyIGVycm9yIG1lc3NhZ2VzXG5cdFx0ICpcblx0XHQgKiBAcmV0dXJuICAgdm9pZFxuXHRcdCAqIEBzaW5jZSAgICAzLjI3LjBcblx0XHQgKiBAdmVyc2lvbiAgMy4yNy4wXG5cdFx0ICovXG5cdFx0dGhpcy5jbGVhcl9lcnJvcnMgPSBmdW5jdGlvbigpIHtcblx0XHRcdCQoICcjbGxtcy1jaGVja291dC1lcnJvcnMnICkucmVtb3ZlKCk7XG5cdFx0fTtcblxuXHRcdC8qKlxuXHRcdCAqIFRyaWdnZXJlZCBieSBjbGlja2luZyB0aGUgXCJBcHBseSBDb3Vwb25cIiBCdXR0b25cblx0XHQgKiBWYWxpZGF0ZXMgdGhlIGNvdXBvbiB2aWEgSlMgYW5kIGFkZHMgZXJyb3IgLyBzdWNjZXNzIG1lc3NhZ2VzXG5cdFx0ICogT24gc3VjY2VzcyBpdCB3aWxsIHJlcGxhY2UgcGFydGlhbHMgb24gdGhlIGNoZWNrb3V0IHNjcmVlbiB3aXRoIHVwZGF0ZWRcblx0XHQgKiBwcmljZXMgYW5kIGEgXCJyZW1vdmUgY291cG9uXCIgYnV0dG9uXG5cdFx0ICpcblx0XHQgKiBAcGFyYW0gICAgb2JqICAgJGJ0biAgalF1ZXJ5IHNlbGVjdG9yIG9mIHRoZSBBcHBseSBidXR0b25cblx0XHQgKiBAcmV0dXJuICAgdm9pZFxuXHRcdCAqIEBzaW5jZSAgICAzLjAuMFxuXHRcdCAqIEB2ZXJzaW9uICAzLjAuMFxuXHRcdCAqL1xuXHRcdHRoaXMuY291cG9uX2FwcGx5ID0gZnVuY3Rpb24gKCAkYnRuICkge1xuXG5cdFx0XHR2YXIgc2VsZiAgICAgICA9IHRoaXMsXG5cdFx0XHRcdCRjb2RlICAgICAgPSAkKCAnI2xsbXNfY291cG9uX2NvZGUnICksXG5cdFx0XHRcdGNvZGUgICAgICAgPSAkY29kZS52YWwoKSxcblx0XHRcdFx0JG1lc3NhZ2VzICA9ICQoICcubGxtcy1jb3Vwb24tbWVzc2FnZXMnICksXG5cdFx0XHRcdCRlcnJvcnMgICAgPSAkbWVzc2FnZXMuZmluZCggJy5sbG1zLWVycm9yJyApLFxuXHRcdFx0XHQkY29udGFpbmVyID0gJCggJ2Zvcm0ubGxtcy1jaGVja291dCcgKTtcblxuXHRcdFx0TExNUy5TcGlubmVyLnN0YXJ0KCAkY29udGFpbmVyICk7XG5cblx0XHRcdHdpbmRvdy5MTE1TLkFqYXguY2FsbCgge1xuXHRcdFx0XHRkYXRhOiB7XG5cdFx0XHRcdFx0YWN0aW9uOiAndmFsaWRhdGVfY291cG9uX2NvZGUnLFxuXHRcdFx0XHRcdGNvZGU6IGNvZGUsXG5cdFx0XHRcdFx0cGxhbl9pZDogJCggJyNsbG1zLXBsYW4taWQnICkudmFsKCksXG5cdFx0XHRcdH0sXG5cdFx0XHRcdGJlZm9yZVNlbmQ6IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdFx0JGVycm9ycy5oaWRlKCk7XG5cblx0XHRcdFx0fSxcblx0XHRcdFx0c3VjY2VzczogZnVuY3Rpb24oIHIgKSB7XG5cblx0XHRcdFx0XHRMTE1TLlNwaW5uZXIuc3RvcCggJGNvbnRhaW5lciApO1xuXG5cdFx0XHRcdFx0aWYgKCAnZXJyb3InID09PSByLmNvZGUgKSB7XG5cblx0XHRcdFx0XHRcdHZhciAkbWVzc2FnZSA9ICQoICc8bGk+JyArIHIubWVzc2FnZSArICc8L2xpPicgKTtcblxuXHRcdFx0XHRcdFx0aWYgKCAhICRlcnJvcnMubGVuZ3RoICkge1xuXG5cdFx0XHRcdFx0XHRcdCRlcnJvcnMgPSAkKCAnPHVsIGNsYXNzPVwibGxtcy1ub3RpY2UgbGxtcy1lcnJvclwiIC8+JyApO1xuXHRcdFx0XHRcdFx0XHQkbWVzc2FnZXMuYXBwZW5kKCAkZXJyb3JzICk7XG5cblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0JGVycm9ycy5lbXB0eSgpO1xuXG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdCRtZXNzYWdlLmFwcGVuZFRvKCAkZXJyb3JzICk7XG5cdFx0XHRcdFx0XHQkZXJyb3JzLnNob3coKTtcblxuXHRcdFx0XHRcdH0gZWxzZSBpZiAoIHIuc3VjY2VzcyApIHtcblxuXHRcdFx0XHRcdFx0JCggJy5sbG1zLWNvdXBvbi13cmFwcGVyJyApLnJlcGxhY2VXaXRoKCByLmRhdGEuY291cG9uX2h0bWwgKTtcblx0XHRcdFx0XHRcdHNlbGYuYmluZF9jb3Vwb24oKTtcblxuXHRcdFx0XHRcdFx0JCggJy5sbG1zLXBheW1lbnQtZ2F0ZXdheXMnICkucmVwbGFjZVdpdGgoIHIuZGF0YS5nYXRld2F5c19odG1sICk7XG5cdFx0XHRcdFx0XHRzZWxmLmJpbmRfZ2F0ZXdheXMoKTtcblxuXHRcdFx0XHRcdFx0JCggJy5sbG1zLW9yZGVyLXN1bW1hcnknICkucmVwbGFjZVdpdGgoIHIuZGF0YS5zdW1tYXJ5X2h0bWwgKTtcblxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHR9XG5cblx0XHRcdH0gKTtcblxuXHRcdH07XG5cblx0XHQvKipcblx0XHQgKiBDYWxsZWQgYnkgY2xpY2tpbmcgdGhlIFwiUmVtb3ZlIENvdXBvblwiIGJ1dHRvblxuXHRcdCAqIFJlbW92ZXMgdGhlIGNvdXBvbiB2aWEgQUpBWCBhbmQgdW5zZXRzIHJlbGF0ZWQgc2Vzc2lvbiBkYXRhXG5cdFx0ICpcblx0XHQgKiBAcGFyYW0gICAgb2JqICAgJGJ0biAgalF1ZXJ5IHNlbGVjdG9yIG9mIHRoZSBSZW1vdmUgYnV0dG9uXG5cdFx0ICogQHJldHVybiAgIHZvaWRcblx0XHQgKiBAc2luY2UgICAgMy4wLjBcblx0XHQgKiBAdmVyc2lvbiAgMy4wLjBcblx0XHQgKi9cblx0XHR0aGlzLmNvdXBvbl9yZW1vdmUgPSBmdW5jdGlvbiggJGJ0biApIHtcblxuXHRcdFx0dmFyIHNlbGYgICAgICAgPSB0aGlzLFxuXHRcdFx0XHQkY29udGFpbmVyID0gJCggJ2Zvcm0ubGxtcy1jaGVja291dCcgKTtcblxuXHRcdFx0TExNUy5TcGlubmVyLnN0YXJ0KCAkY29udGFpbmVyICk7XG5cblx0XHRcdHdpbmRvdy5MTE1TLkFqYXguY2FsbCgge1xuXHRcdFx0XHRkYXRhOiB7XG5cdFx0XHRcdFx0YWN0aW9uOiAncmVtb3ZlX2NvdXBvbl9jb2RlJyxcblx0XHRcdFx0XHRwbGFuX2lkOiAkKCAnI2xsbXMtcGxhbi1pZCcgKS52YWwoKSxcblx0XHRcdFx0fSxcblx0XHRcdFx0c3VjY2VzczogZnVuY3Rpb24oIHIgKSB7XG5cblx0XHRcdFx0XHRMTE1TLlNwaW5uZXIuc3RvcCggJGNvbnRhaW5lciApO1xuXG5cdFx0XHRcdFx0aWYgKCByLnN1Y2Nlc3MgKSB7XG5cblx0XHRcdFx0XHRcdCQoICcubGxtcy1jb3Vwb24td3JhcHBlcicgKS5yZXBsYWNlV2l0aCggci5kYXRhLmNvdXBvbl9odG1sICk7XG5cdFx0XHRcdFx0XHRzZWxmLmJpbmRfY291cG9uKCk7XG5cblx0XHRcdFx0XHRcdCQoICcubGxtcy1vcmRlci1zdW1tYXJ5JyApLnJlcGxhY2VXaXRoKCByLmRhdGEuc3VtbWFyeV9odG1sICk7XG5cblx0XHRcdFx0XHRcdCQoICcubGxtcy1wYXltZW50LWdhdGV3YXlzJyApLnJlcGxhY2VXaXRoKCByLmRhdGEuZ2F0ZXdheXNfaHRtbCApO1xuXHRcdFx0XHRcdFx0c2VsZi5iaW5kX2dhdGV3YXlzKCk7XG5cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0fVxuXG5cdFx0XHR9ICk7XG5cblx0XHR9O1xuXG5cdFx0LyoqXG5cdFx0ICogU2Nyb2xsIGVycm9yIG1lc3NhZ2VzIGludG8gdmlld1xuXHRcdCAqXG5cdFx0ICogQHJldHVybiAgIHZvaWRcblx0XHQgKiBAc2luY2UgICAgMy4yNy4wXG5cdFx0ICogQHZlcnNpb24gIDMuMjcuMFxuXHRcdCAqL1xuXHRcdHRoaXMuZm9jdXNfZXJyb3JzID0gZnVuY3Rpb24oKSB7XG5cdFx0XHQkKCAnaHRtbCwgYm9keScgKS5hbmltYXRlKCB7XG5cdFx0XHRcdHNjcm9sbFRvcDogJCggJyNsbG1zLWNoZWNrb3V0LWVycm9ycycgKS5vZmZzZXQoKS50b3AgLSA1MCxcblx0XHRcdH0sIDIwMCApO1xuXHRcdH07XG5cblx0XHQvKipcblx0XHQgKiBCaW5kIGV4dGVybmFsIGdhdGV3YXkgSlNcblx0XHQgKlxuXHRcdCAqIEByZXR1cm4gICB2b2lkXG5cdFx0ICogQHNpbmNlICAgIDMuMC4wXG5cdFx0ICogQHZlcnNpb24gIDMuMC4wXG5cdFx0ICovXG5cdFx0dGhpcy5sb2FkX2dhdGV3YXlzID0gZnVuY3Rpb24oKSB7XG5cblx0XHRcdGZvciAoIHZhciBpID0gMDsgaSA8PSBnYXRld2F5cy5sZW5ndGg7IGkrKyApIHtcblx0XHRcdFx0dmFyIGcgPSBnYXRld2F5c1tpXTtcblx0XHRcdFx0aWYgKCB0eXBlb2YgZyA9PT0gJ29iamVjdCcgJiYgZyAhPT0gbnVsbCApIHtcblx0XHRcdFx0XHRpZiAoIGcuYmluZCAhPT0gdW5kZWZpbmVkICYmICdmdW5jdGlvbicgPT09IHR5cGVvZiBnLmJpbmQgICkge1xuXHRcdFx0XHRcdFx0Zy5iaW5kKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdC8qKlxuXHRcdCAqIFN0YXJ0IG9yIHN0b3AgcHJvY2Vzc2luZyBldmVudHMgb24gdGhlIGNoZWNrb3V0IGZvcm1cblx0XHQgKlxuXHRcdCAqIEBwYXJhbSAgICBzdHJpbmcgICBhY3Rpb24gIHdoZXRoZXIgdG8gc3RhcnQgb3Igc3RvcCBwcm9jZXNzaW5nIFtzdGFydHxzdG9wXVxuXHRcdCAqIEByZXR1cm4gICB2b2lkXG5cdFx0ICogQHNpbmNlICAgIDMuMC4wXG5cdFx0ICogQHZlcnNpb24gIDMuMjQuMVxuXHRcdCAqL1xuXHRcdHRoaXMucHJvY2Vzc2luZyA9IGZ1bmN0aW9uKCBhY3Rpb24gKSB7XG5cblx0XHRcdHZhciBmdW5jLCAkZm9ybTtcblxuXHRcdFx0c3dpdGNoICggYWN0aW9uICkge1xuXG5cdFx0XHRcdGNhc2UgJ3N0b3AnOlxuXHRcdFx0XHRcdGZ1bmMgPSAncmVtb3ZlQ2xhc3MnO1xuXHRcdFx0XHRicmVhaztcblxuXHRcdFx0XHRjYXNlICdzdGFydCc6XG5cdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0ZnVuYyA9ICdhZGRDbGFzcyc7XG5cdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHR9XG5cblx0XHRcdGlmICggJ2NoZWNrb3V0JyA9PT0gdGhpcy5mb3JtX2FjdGlvbiApIHtcblx0XHRcdFx0JGZvcm0gPSB0aGlzLiRjaGVja291dF9mb3JtO1xuXHRcdFx0fSBlbHNlIGlmICggJ2NvbmZpcm0nID09PSB0aGlzLmZvcm1fYWN0aW9uICkge1xuXHRcdFx0XHQkZm9ybSA9IHRoaXMuJGNvbmZpcm1fZm9ybTtcblx0XHRcdH1cblxuXHRcdFx0JGZvcm1bIGZ1bmMgXSggJ2xsbXMtaXMtcHJvY2Vzc2luZycgKTtcblx0XHRcdExMTVMuU3Bpbm5lclsgYWN0aW9uIF0oIHRoaXMuJGZvcm1fc2VjdGlvbnMgKTtcblxuXHRcdH07XG5cblx0XHQvKipcblx0XHQgKiBIYW5kbGVzIGZvcm0gc3VibWlzc2lvblxuXHRcdCAqIENhbGxzIGFsbCB2YWxpZGF0aW9uIGV2ZW50cyBpbiBgYmVmb3JlX3N1Ym1pdFtdYFxuXHRcdCAqIHdhaXRzIGZvciBjYWxsIGJhY2tzIGFuZCBlaXRoZXIgZGlzcGxheXMgcmV0dXJuZWQgZXJyb3JzXG5cdFx0ICogb3Igc3VibWl0cyB0aGUgZm9ybSB3aGVuIGFsbCBhcmUgc3VjY2Vzc2Z1bFxuXHRcdCAqXG5cdFx0ICogQHBhcmFtICAgIG9iaiAgIGUgIEpTIGV2ZW50IG9iamVjdFxuXHRcdCAqIEByZXR1cm4gICB2b2lkXG5cdFx0ICogQHNpbmNlICAgIDMuMC4wXG5cdFx0ICogQHZlcnNpb24gIDMuMjcuMFxuXHRcdCAqL1xuXHRcdHRoaXMuc3VibWl0ID0gZnVuY3Rpb24oIGUgKSB7XG5cblx0XHRcdHZhciBzZWxmICAgICAgID0gZS5kYXRhLFxuXHRcdFx0XHRudW0gICAgICAgID0gYmVmb3JlX3N1Ym1pdC5sZW5ndGgsXG5cdFx0XHRcdGNoZWNrcyAgICAgPSAwLFxuXHRcdFx0XHRtYXhfY2hlY2tzID0gNjAwMDAsXG5cdFx0XHRcdGVycm9ycyAgICAgPSBbXSxcblx0XHRcdFx0ZmluaXNoZXMgICA9IDAsXG5cdFx0XHRcdHN1Y2Nlc3NlcyAgPSAwLFxuXHRcdFx0XHRpbnRlcnZhbDtcblxuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG5cdFx0XHQvLyBhZGQgc3Bpbm5lcnNcblx0XHRcdHNlbGYucHJvY2Vzc2luZyggJ3N0YXJ0JyApO1xuXG5cdFx0XHQvLyByZW1vdmUgZXJyb3JzIHRvIHByZXZlbnQgZHVwbGljYXRlc1xuXHRcdFx0c2VsZi5jbGVhcl9lcnJvcnMoKTtcblxuXHRcdFx0Ly8gc3RhcnQgcnVubmluZyBhbGwgdGhlIGV2ZW50c1xuXHRcdFx0Zm9yICggdmFyIGkgPSAwOyBpIDwgYmVmb3JlX3N1Ym1pdC5sZW5ndGg7IGkrKyApIHtcblxuXHRcdFx0XHR2YXIgb2JqID0gYmVmb3JlX3N1Ym1pdFsgaSBdO1xuXG5cdFx0XHRcdG9iai5oYW5kbGVyKCBvYmouZGF0YSwgZnVuY3Rpb24oIHIgKSB7XG5cblx0XHRcdFx0XHRmaW5pc2hlcysrO1xuXHRcdFx0XHRcdGlmICggdHJ1ZSA9PT0gciApIHtcblx0XHRcdFx0XHRcdHN1Y2Nlc3NlcysrO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAoICdzdHJpbmcnID09PSB0eXBlb2YgciApIHtcblx0XHRcdFx0XHRcdGVycm9ycy5wdXNoKCByICk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdH0gKTtcblxuXHRcdFx0fVxuXG5cdFx0XHQvLyBydW4gYW4gaW50ZXJ2YWwgdG8gd2FpdCBmb3IgZmluaXNoZXNcblx0XHRcdGludGVydmFsID0gc2V0SW50ZXJ2YWwoIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdHZhciBjbGVhciA9IGZhbHNlLFxuXHRcdFx0XHRcdHN0b3AgID0gZmFsc2U7XG5cblx0XHRcdFx0Ly8gdGltZW91dC4uLlxuXHRcdFx0XHRpZiAoIGNoZWNrcyA+PSBtYXhfY2hlY2tzICkge1xuXG5cdFx0XHRcdFx0Y2xlYXIgPSB0cnVlO1xuXHRcdFx0XHRcdHN0b3AgID0gdHJ1ZTtcblxuXHRcdFx0XHR9IGVsc2UgaWYgKCBudW0gPT09IGZpbmlzaGVzICkge1xuXHRcdFx0XHRcdC8vIGV2ZXJ5dGhpbmcgaGFzIGZpbmlzaGVkXG5cblx0XHRcdFx0XHQvLyBhbGwgd2VyZSBzdWNjZXNzZnVsLCBzdWJtaXQgdGhlIGZvcm1cblx0XHRcdFx0XHRpZiAoIG51bSA9PT0gc3VjY2Vzc2VzICkge1xuXG5cdFx0XHRcdFx0XHRjbGVhciA9IHRydWU7XG5cblx0XHRcdFx0XHRcdHNlbGYuJGNoZWNrb3V0X2Zvcm0ub2ZmKCAnc3VibWl0Jywgc2VsZi5zdWJtaXQgKTtcblx0XHRcdFx0XHRcdHNlbGYuJGNoZWNrb3V0X2Zvcm0udHJpZ2dlciggJ3N1Ym1pdCcgKTtcblxuXHRcdFx0XHRcdH0gZWxzZSBpZiAoIGVycm9ycy5sZW5ndGggKSB7XG5cblx0XHRcdFx0XHRcdGNsZWFyID0gdHJ1ZTtcblx0XHRcdFx0XHRcdHN0b3AgID0gdHJ1ZTtcblxuXHRcdFx0XHRcdFx0Zm9yICggdmFyIGkgPSAwOyBpIDwgZXJyb3JzLmxlbmd0aDsgaSsrICkge1xuXHRcdFx0XHRcdFx0XHRzZWxmLmFkZF9lcnJvciggZXJyb3JzWyBpIF0gKTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0c2VsZi5mb2N1c19lcnJvcnMoKTtcblxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKCBjbGVhciApIHtcblx0XHRcdFx0XHRjbGVhckludGVydmFsKCBpbnRlcnZhbCApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKCBzdG9wICkge1xuXHRcdFx0XHRcdHNlbGYucHJvY2Vzc2luZyggJ3N0b3AnICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRjaGVja3MrKztcblxuXHRcdFx0fSwgMTAwICk7XG5cblx0XHR9O1xuXG5cdFx0Ly8gaW5pdGlhbGl6ZVxuXHRcdHRoaXMuaW5pdCgpO1xuXG5cdFx0cmV0dXJuIHRoaXM7XG5cblx0fTtcblxuXHR3aW5kb3cubGxtcyAgICAgICAgICA9IHdpbmRvdy5sbG1zIHx8IHt9O1xuXHR3aW5kb3cubGxtcy5jaGVja291dCA9IG5ldyBsbG1zX2NoZWNrb3V0KCk7XG5cbn0gKSggalF1ZXJ5ICk7XG4iXX0=
