!function(){"use strict";var t={d:function(n,e){for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},o:function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},r:function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},n={};t.r(n),t.d(n,{deletePlan:function(){return d},editPlan:function(){return f},saveEditedPlan:function(){return g},savePlan:function(){return E}});var e={};t.r(e),t.d(e,{getEditedPlan:function(){return v},getEditedPlans:function(){return p},getLastPlanDeleteError:function(){return R},getLastPlanSaveError:function(){return m},getPlan:function(){return y},getPlanEdits:function(){return P},getPlans:function(){return w},getRawPlan:function(){return b},hasEditsForPlan:function(){return h},hasPlans:function(){return S},isAutosavingPlan:function(){return L},isDeletingPlan:function(){return D},isLoading:function(){return j},isSavingPlan:function(){return O}});var r={};t.r(r),t.d(r,{store:function(){return T},storeConfig:function(){return A}});var o={};t.r(o),t.d(o,{accessPlanStore:function(){return T},accessPlans:function(){return r}});var i=window.wp.data,s=window.wp.i18n;const c="llms/postType",u="accessPlan",l={kind:c,name:u,baseURL:"llms/v1/access-plans",baseURLParams:{context:"edit"},label:(0,s.__)("Access Plan","lifterlms"),transientEdits:{blocks:!0,selection:!0},mergedEdits:{meta:!0},rawAttributes:["title","excerpt","content"],getTitle:t=>{var n;return(null==t||null===(n=t.title)||void 0===n?void 0:n.rendered)||(null==t?void 0:t.title)}};var a=window.wp.coreData;function*d(t){const{deleteEntityRecord:n}=(0,i.dispatch)(a.store);return n(c,u,t)}function*f(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{editEntityRecord:e}=(0,i.dispatch)(a.store);return e(c,u,t,n)}function*g(t){const{saveEditedEntityRecord:n}=(0,i.dispatch)(a.store);return n(c,u,t)}function*E(t){const{saveEntityRecord:n}=(0,i.dispatch)(a.store);return n(c,u,t)}function v(t,n){const{getEditedEntityRecord:e}=(0,i.select)(a.store);return e(c,u,n)}function y(t,n,e){const{getEntityRecord:r}=(0,i.select)(a.store);return r(c,u,n,e)}function P(t,n){const{getEntityRecordEdits:e}=(0,i.select)(a.store);return e(c,u,n)}function w(t,n){const{getEntityRecords:e}=(0,i.select)(a.store);return e(c,u,n)}function p(t,n){const e=w(0,n);return e&&e.length?e.map((t=>{let{id:n}=t;return v(0,n)})):null}function R(t,n){const{getLastEntityDeleteError:e}=(0,i.select)(a.store);return e(c,u,n)}function m(t,n){const{getLastEntitySaveError:e}=(0,i.select)(a.store);return e(c,u,n)}function b(t,n){const{getRawEntityRecord:e}=(0,i.select)(a.store);return e(c,u,n)}function h(t,n){const{hasEditsForEntityRecord:e}=(0,i.select)(a.store);return e(c,u,n)}function S(t,n){const{hasEntityRecords:e}=(0,i.select)(a.store);return e(c,u,n)}function L(t,n){const{isAutosavingEntityRecord:e}=(0,i.select)(a.store);return e(c,u,n)}function D(t,n){const{isDeletingEntityRecord:e}=(0,i.select)(a.store);return e(c,u,n)}function O(t,n){const{isSavingEntityRecord:e}=(0,i.select)(a.store);return e(c,u,n)}function j(t,n){const{isResolving:e}=(0,i.select)(a.store);return e("getEntityRecords",[c,u,n])}const A={reducer:t=>t,actions:n,selectors:e},T=(0,i.createReduxStore)("llms/access-plans",A);!function(){const{addEntities:t}=(0,i.dispatch)(a.store);t(l)}(),(0,i.register)(T),function(t,n){let e=arguments.length>2&&void 0!==arguments[2]&&arguments[2];window.llms=window.llms||{};let r={};e&&window.llms[t]&&(r=window.llms[t]),window.llms[t]={...r,...n}}("data",o)}();